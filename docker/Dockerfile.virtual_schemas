FROM postgres:15

# Metadaten
LABEL maintainer="ExaPG Team"
LABEL description="PostgreSQL mit Foreign Data Wrappers für ExaPG Virtual Schemas"
LABEL version="1.0"

# Umgebungsvariablen
ENV POSTGRES_PASSWORD=postgres
ENV POSTGRES_USER=postgres
ENV POSTGRES_DB=postgres

# Installiere Build-Abhängigkeiten und FDW-Voraussetzungen
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    ca-certificates \
    curl \
    git \
    libcurl4-openssl-dev \
    libmariadb-dev \
    libpq-dev \
    libsqlite3-dev \
    libssl-dev \
    postgresql-server-dev-15 \
    freetds-dev \
    libhiredis-dev \
    unzip \
    wget \
    python3-dev \
    python3-pip \
    pkg-config \
    jq \
    odbc-postgresql \
    unixodbc-dev \
    libhdfs3-dev \
    libxml2-dev \
    libkrb5-dev \
    && rm -rf /var/lib/apt/lists/*

# Setze Umgebungsvariablen für die Kompilierung
ENV PG_CONFIG=/usr/lib/postgresql/15/bin/pg_config

# PostgreSQL FDW (postgres_fdw)
RUN apt-get update && apt-get install -y postgresql-15-postgres-fdw && rm -rf /var/lib/apt/lists/*

# MongoDB FDW
RUN cd /tmp && \
    git clone https://github.com/EnterpriseDB/mongo_fdw.git && \
    cd mongo_fdw && \
    make USE_PGXS=1 && \
    make USE_PGXS=1 install

# MySQL FDW
RUN cd /tmp && \
    git clone https://github.com/EnterpriseDB/mysql_fdw.git && \
    cd mysql_fdw && \
    make USE_PGXS=1 && \
    make USE_PGXS=1 install

# SQLite FDW
RUN cd /tmp && \
    git clone https://github.com/pgspider/sqlite_fdw.git && \
    cd sqlite_fdw && \
    make USE_PGXS=1 && \
    make USE_PGXS=1 install

# TDS FDW (für SQL Server)
RUN cd /tmp && \
    git clone https://github.com/tds-fdw/tds_fdw.git && \
    cd tds_fdw && \
    make USE_PGXS=1 && \
    make USE_PGXS=1 install

# Redis FDW
RUN cd /tmp && \
    git clone https://github.com/pg-redis-fdw/redis_fdw.git && \
    cd redis_fdw && \
    make USE_PGXS=1 && \
    make USE_PGXS=1 install

# JDBC FDW (für Java-basierte Quellen wie Oracle, SAP HANA, Teradata)
RUN cd /tmp && \
    git clone https://github.com/pgspider/jdbc_fdw.git && \
    cd jdbc_fdw && \
    apt-get update && apt-get install -y default-jdk && \
    make USE_PGXS=1 && \
    make USE_PGXS=1 install && \
    rm -rf /var/lib/apt/lists/*

# ODBC FDW
RUN cd /tmp && \
    git clone https://github.com/pgspider/odbc_fdw.git && \
    cd odbc_fdw && \
    make USE_PGXS=1 && \
    make USE_PGXS=1 install

# File FDW (für CSV, JSON, usw.)
RUN cd /tmp && \
    git clone https://github.com/pgspider/file_fdw.git && \
    cd file_fdw && \
    make USE_PGXS=1 && \
    make USE_PGXS=1 install

# Elastic FDW
RUN cd /tmp && \
    git clone https://github.com/matthewfranglen/postgres-elasticsearch-fdw.git && \
    cd postgres-elasticsearch-fdw && \
    pip3 install -r requirements.txt && \
    python3 setup.py install

# Multi FDW (für Föderierte Abfragen über mehrere FDWs)
RUN cd /tmp && \
    git clone https://github.com/pgspider/multi_fdw.git && \
    cd multi_fdw && \
    make USE_PGXS=1 && \
    make USE_PGXS=1 install

# Bereinige Build-Dateien
RUN rm -rf /tmp/*

# Aktiviere automatisches Pushdown für Abfragen
RUN echo "postgres_fdw.use_remote_estimate = on" >> /usr/share/postgresql/postgresql.conf.sample && \
    echo "postgres_fdw.fdw_tuple_cost = 0.01" >> /usr/share/postgresql/postgresql.conf.sample && \
    echo "postgres_fdw.fdw_startup_cost = 10" >> /usr/share/postgresql/postgresql.conf.sample

# Kopiere die SQL-Skripte für die Virtual Schemas
COPY sql/virtual_schemas/create_virtual_schemas.sql /docker-entrypoint-initdb.d/
COPY sql/virtual_schemas/create_schema_utils.sql /docker-entrypoint-initdb.d/

# Kopiere die Setup-Skripte
COPY scripts/setup/setup-virtual-schemas.sh /docker-entrypoint-initdb.d/
RUN chmod +x /docker-entrypoint-initdb.d/setup-virtual-schemas.sh

# Healthcheck
HEALTHCHECK --interval=10s --timeout=5s --retries=5 CMD pg_isready -U postgres || exit 1

EXPOSE 5432

CMD ["postgres"] 