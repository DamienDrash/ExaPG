version: '3.8'

services:
  # ExaPG-Hauptdatenbank mit ETL-Framework
  exapg:
    build:
      context: ../../
      dockerfile: docker/Dockerfile.etl
    container_name: exapg-etl
    hostname: exapg
    ports:
      - "5432:5432"
      - "8000:8000"
    volumes:
      - exapg-data:/var/lib/postgresql/data
      - ../../sql:/sql
      - ../../scripts:/scripts
      - ../../data:/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      # Optimierungen f端r ETL-Workloads
      POSTGRES_INITDB_ARGS: --data-checksums
      # ETL-Framework Konfiguration
      ETL_FRAMEWORK_ENABLED: "true"
      ETL_BATCH_SIZE: ${ETL_BATCH_SIZE:-100000}
      ETL_PARALLEL_JOBS: ${ETL_PARALLEL_JOBS:-8}
      ETL_CDC_ENABLED: ${ETL_CDC_ENABLED:-true}
      ETL_DATA_QUALITY_ENABLED: ${ETL_DATA_QUALITY_ENABLED:-true}
    networks:
      - exapg-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  # Kafka f端r CDC (Change Data Capture)
  kafka:
    image: bitnami/kafka:latest
    container_name: exapg-kafka
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes:
      - kafka-data:/bitnami/kafka
    networks:
      - exapg-network
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5
      
  # Debezium Connect f端r CDC
  connect:
    image: debezium/connect:2.3
    container_name: exapg-connect
    hostname: connect
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: exapg-connect
      CONFIG_STORAGE_TOPIC: exapg_connect_configs
      OFFSET_STORAGE_TOPIC: exapg_connect_offsets
      STATUS_STORAGE_TOPIC: exapg_connect_statuses
    depends_on:
      - kafka
      - exapg
    networks:
      - exapg-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/connectors"]
      interval: 30s
      timeout: 10s
      retries: 5
      
  # ETL-Orchestrierung mit Airflow
  airflow:
    image: apache/airflow:latest
    container_name: exapg-airflow
    hostname: airflow
    ports:
      - "8080:8080"
    volumes:
      - ../../scripts/etl:/opt/airflow/dags
      - airflow-data:/opt/airflow
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
      _AIRFLOW_DB_UPGRADE: "true"
      _AIRFLOW_WWW_USER_CREATE: "true"
      _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_USER:-admin}
      _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_PASSWORD:-admin}
    networks:
      - exapg-network
    depends_on:
      - exapg
    command: bash -c "airflow db init && airflow standalone"
      
  # ETL Setup Helper
  setup:
    build:
      context: ../../
      dockerfile: docker/Dockerfile.etl
    container_name: exapg-etl-setup
    hostname: exapg-etl-setup
    depends_on:
      - exapg
      - kafka
      - connect
    volumes:
      - ../../scripts:/scripts
      - ../../sql:/sql
      - ../../data:/data
    environment:
      POSTGRES_HOST: exapg
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      CONNECT_HOST: connect
      CONNECT_PORT: 8083
    networks:
      - exapg-network
    command: >
      bash -c "
        echo 'Warte auf Verf端gbarkeit der Datenbank und Kafka...'
        sleep 30
        echo 'Starte ETL-Framework Einrichtung...'
        /scripts/setup/setup-etl-framework.sh
        echo 'ETL-Framework wurde eingerichtet.'
      "
    restart: "no"

networks:
  exapg-network:
    driver: bridge

volumes:
  exapg-data:
  kafka-data:
  airflow-data: 