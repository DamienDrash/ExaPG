FROM postgres:15-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    build-base \
    openssl-dev \
    libxml2-dev \
    zlib-dev \
    lz4-dev \
    zstd-dev \
    bzip2-dev \
    git \
    curl \
    make \
    cmake \
    pkgconfig

# Build pgBackRest from source
WORKDIR /tmp
RUN git clone https://github.com/pgbackrest/pgbackrest.git \
    && cd pgbackrest \
    && git checkout release/2.48 \
    && cd src \
    && ./configure --prefix=/usr/local \
    && make -j$(nproc) \
    && make install

# Runtime stage
FROM postgres:15-alpine AS runtime

# Install runtime dependencies
RUN apk add --no-cache \
    openssl \
    libxml2 \
    zlib \
    lz4-libs \
    zstd-libs \
    bzip2-libs \
    python3 \
    py3-pip \
    py3-psycopg2 \
    curl \
    bash \
    dcron \
    rsync \
    openssh-client \
    ca-certificates \
    tzdata

# Copy pgBackRest from builder stage
COPY --from=builder /usr/local/bin/pgbackrest /usr/local/bin/
COPY --from=builder /usr/local/share/pgbackrest /usr/local/share/pgbackrest/

# Install Python dependencies for backup scripts
RUN pip3 install --no-cache-dir \
    requests \
    flask \
    schedule \
    psycopg2-binary

# Create necessary directories
RUN mkdir -p \
    /etc/pgbackrest \
    /var/lib/pgbackrest \
    /var/spool/pgbackrest \
    /var/log/pgbackrest \
    /usr/local/bin \
    /root/.ssh

# Create pgbackrest user and set permissions
RUN addgroup -g 999 pgbackrest \
    && adduser -D -u 999 -G pgbackrest pgbackrest \
    && chown -R pgbackrest:pgbackrest /var/lib/pgbackrest /var/spool/pgbackrest /var/log/pgbackrest

# Copy backup scripts
COPY pgbackrest/scripts/ /usr/local/bin/
RUN chmod +x /usr/local/bin/*.sh /usr/local/bin/*.py

# Setup cron
COPY pgbackrest/scripts/crontab /etc/crontabs/root
RUN chmod 0644 /etc/crontabs/root

# Copy entrypoint script
COPY docker/scripts/pgbackrest-entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --retries=3 --start-period=60s \
    CMD pgbackrest --stanza=${PGBACKREST_STANZA:-exapg} check || exit 1

# Labels
LABEL maintainer="ExaPG Team" \
    version="1.0.0" \
    description="pgBackRest service for ExaPG" \
    com.exapg.service="backup" \
    com.exapg.component="pgbackrest"

# Default environment variables
ENV PGBACKREST_STANZA=exapg \
    PGBACKREST_CONFIG=/etc/pgbackrest/pgbackrest.conf \
    PGBACKREST_REPO1_PATH=/var/lib/pgbackrest \
    BACKUP_SCHEDULE_ENABLED=true \
    BACKUP_PARALLEL_PROCESSES=4 \
    BACKUP_COMPRESSION_LEVEL=3

# Switch to pgbackrest user
USER pgbackrest

# Default command
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["crond", "-f", "-l", "8"] 