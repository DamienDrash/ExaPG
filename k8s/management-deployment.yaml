---
# pgAdmin Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: exapg-pgadmin
  namespace: exapg
  labels:
    app.kubernetes.io/name: exapg
    app.kubernetes.io/component: pgadmin
    app.kubernetes.io/part-of: exapg-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: exapg
      app.kubernetes.io/component: pgadmin
  template:
    metadata:
      labels:
        app.kubernetes.io/name: exapg
        app.kubernetes.io/component: pgadmin
    spec:
      containers:
      - name: pgadmin
        image: dpage/pgadmin4:7.8
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        env:
        - name: PGADMIN_DEFAULT_EMAIL
          valueFrom:
            secretKeyRef:
              name: exapg-mgmt-secret
              key: PGADMIN_EMAIL
        - name: PGADMIN_DEFAULT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: exapg-mgmt-secret
              key: PGADMIN_PASSWORD
        - name: PGADMIN_CONFIG_SERVER_MODE
          value: "True"
        - name: PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED
          value: "False"
        - name: PGADMIN_CONFIG_SESSION_COOKIE_SECURE
          value: "False"
        - name: PGADMIN_CONFIG_WTF_CSRF_SSL_STRICT
          value: "False"
        - name: PGADMIN_CONFIG_CONSOLE_LOG_LEVEL
          value: "30"
        
        volumeMounts:
        - name: pgadmin-data
          mountPath: /var/lib/pgadmin
        - name: pgadmin-config
          mountPath: /pgadmin4/config
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        
        livenessProbe:
          httpGet:
            path: /misc/ping
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
        
        readinessProbe:
          httpGet:
            path: /misc/ping
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
      
      volumes:
      - name: pgadmin-data
        persistentVolumeClaim:
          claimName: pgadmin-data
      - name: pgadmin-config
        persistentVolumeClaim:
          claimName: pgadmin-config

---
# PVC for pgAdmin Data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgadmin-data
  namespace: exapg
  labels:
    app.kubernetes.io/name: exapg
    app.kubernetes.io/component: pgadmin
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 5Gi

---
# PVC for pgAdmin Config
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgadmin-config
  namespace: exapg
  labels:
    app.kubernetes.io/name: exapg
    app.kubernetes.io/component: pgadmin
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 1Gi

---
# Service for pgAdmin
apiVersion: v1
kind: Service
metadata:
  name: exapg-pgadmin
  namespace: exapg
  labels:
    app.kubernetes.io/name: exapg
    app.kubernetes.io/component: pgadmin
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app.kubernetes.io/name: exapg
    app.kubernetes.io/component: pgadmin
  type: ClusterIP

---
# Adminer Deployment (Lightweight DB Admin)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: exapg-adminer
  namespace: exapg
  labels:
    app.kubernetes.io/name: exapg
    app.kubernetes.io/component: adminer
    app.kubernetes.io/part-of: exapg-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: exapg
      app.kubernetes.io/component: adminer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: exapg
        app.kubernetes.io/component: adminer
    spec:
      containers:
      - name: adminer
        image: adminer:4.8.1
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: ADMINER_DEFAULT_SERVER
          value: "exapg-coordinator.exapg.svc.cluster.local"
        - name: ADMINER_DESIGN
          value: "pepa-linha-dark"
        
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
        
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10

---
# Service for Adminer
apiVersion: v1
kind: Service
metadata:
  name: exapg-adminer
  namespace: exapg
  labels:
    app.kubernetes.io/name: exapg
    app.kubernetes.io/component: adminer
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app.kubernetes.io/name: exapg
    app.kubernetes.io/component: adminer
  type: ClusterIP

---
# File Browser Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: exapg-filebrowser
  namespace: exapg
  labels:
    app.kubernetes.io/name: exapg
    app.kubernetes.io/component: filebrowser
    app.kubernetes.io/part-of: exapg-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: exapg
      app.kubernetes.io/component: filebrowser
  template:
    metadata:
      labels:
        app.kubernetes.io/name: exapg
        app.kubernetes.io/component: filebrowser
    spec:
      containers:
      - name: filebrowser
        image: filebrowser/filebrowser:v2.27.0
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        env:
        - name: FB_DATABASE
          value: "/database/filebrowser.db"
        - name: FB_ROOT
          value: "/srv"
        - name: FB_LOG
          value: "stdout"
        - name: FB_NOAUTH
          value: "false"
        
        volumeMounts:
        - name: filebrowser-data
          mountPath: /database
        - name: filebrowser-config
          mountPath: /config
        - name: shared-logs
          mountPath: /srv/logs
          readOnly: true
        
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
        
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
      
      volumes:
      - name: filebrowser-data
        persistentVolumeClaim:
          claimName: filebrowser-data
      - name: filebrowser-config
        persistentVolumeClaim:
          claimName: filebrowser-config
      - name: shared-logs
        emptyDir: {}

---
# PVC for File Browser Data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: filebrowser-data
  namespace: exapg
  labels:
    app.kubernetes.io/name: exapg
    app.kubernetes.io/component: filebrowser
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 1Gi

---
# PVC for File Browser Config
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: filebrowser-config
  namespace: exapg
  labels:
    app.kubernetes.io/name: exapg
    app.kubernetes.io/component: filebrowser
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 1Gi

---
# Service for File Browser
apiVersion: v1
kind: Service
metadata:
  name: exapg-filebrowser
  namespace: exapg
  labels:
    app.kubernetes.io/name: exapg
    app.kubernetes.io/component: filebrowser
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app.kubernetes.io/name: exapg
    app.kubernetes.io/component: filebrowser
  type: ClusterIP

---
# Backup Management UI Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: exapg-backup-ui
  namespace: exapg
  labels:
    app.kubernetes.io/name: exapg
    app.kubernetes.io/component: backup-ui
    app.kubernetes.io/part-of: exapg-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: exapg
      app.kubernetes.io/component: backup-ui
  template:
    metadata:
      labels:
        app.kubernetes.io/name: exapg
        app.kubernetes.io/component: backup-ui
    spec:
      containers:
      - name: backup-ui
        image: nginx:alpine
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        
        volumeMounts:
        - name: backup-ui-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: backup-ui-html
          mountPath: /usr/share/nginx/html
        
        resources:
          requests:
            memory: "32Mi"
            cpu: "25m"
          limits:
            memory: "128Mi"
            cpu: "250m"
        
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
        
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
      
      volumes:
      - name: backup-ui-config
        configMap:
          name: exapg-backup-ui-config
      - name: backup-ui-html
        configMap:
          name: exapg-backup-ui-html

---
# ConfigMap for Backup UI Nginx Config
apiVersion: v1
kind: ConfigMap
metadata:
  name: exapg-backup-ui-config
  namespace: exapg
  labels:
    app.kubernetes.io/name: exapg
    app.kubernetes.io/component: backup-ui-config
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        
        server {
            listen 80;
            server_name _;
            
            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # Backup Dashboard
            location / {
                root /usr/share/nginx/html;
                index index.html;
                try_files $uri $uri/ /index.html;
            }
            
            # API proxy to backup monitoring dashboard
            location /api/ {
                proxy_pass http://exapg-backup-dashboard:5000/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }

---
# ConfigMap for Backup UI HTML
apiVersion: v1
kind: ConfigMap
metadata:
  name: exapg-backup-ui-html
  namespace: exapg
  labels:
    app.kubernetes.io/name: exapg
    app.kubernetes.io/component: backup-ui-html
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>ExaPG Backup Management</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                margin: 0;
                padding: 20px;
                background-color: #f5f5f5;
            }
            .container {
                max-width: 1200px;
                margin: 0 auto;
                background: white;
                padding: 20px;
                border-radius: 8px;
                box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            }
            h1 {
                color: #333;
                text-align: center;
            }
            .dashboard-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                gap: 20px;
                margin-top: 20px;
            }
            .card {
                background: #f8f9fa;
                padding: 20px;
                border-radius: 8px;
                border-left: 4px solid #007bff;
            }
            .card h3 {
                margin-top: 0;
                color: #007bff;
            }
            .status {
                padding: 5px 10px;
                border-radius: 4px;
                color: white;
                font-weight: bold;
            }
            .status.healthy { background-color: #28a745; }
            .status.warning { background-color: #ffc107; color: #212529; }
            .status.error { background-color: #dc3545; }
            .btn {
                background-color: #007bff;
                color: white;
                padding: 10px 20px;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                text-decoration: none;
                display: inline-block;
                margin: 5px;
            }
            .btn:hover {
                background-color: #0056b3;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>ExaPG Backup Management Dashboard</h1>
            
            <div class="dashboard-grid">
                <div class="card">
                    <h3>Backup Status</h3>
                    <p>Last Backup: <span id="lastBackup">Loading...</span></p>
                    <p>Status: <span class="status healthy" id="backupStatus">Healthy</span></p>
                    <a href="/api/backup/status" class="btn">View Details</a>
                </div>
                
                <div class="card">
                    <h3>Repository Health</h3>
                    <p>Repository Size: <span id="repoSize">Loading...</span></p>
                    <p>Available Space: <span id="availableSpace">Loading...</span></p>
                    <a href="/api/repository/info" class="btn">Repository Info</a>
                </div>
                
                <div class="card">
                    <h3>Disaster Recovery</h3>
                    <p>Last DR Test: <span id="lastDRTest">Loading...</span></p>
                    <p>Test Status: <span class="status healthy" id="drStatus">Passed</span></p>
                    <a href="/api/dr/test" class="btn">Run DR Test</a>
                </div>
                
                <div class="card">
                    <h3>Backup Operations</h3>
                    <a href="/api/backup/full" class="btn">Full Backup</a>
                    <a href="/api/backup/incremental" class="btn">Incremental Backup</a>
                    <a href="/api/backup/verify" class="btn">Verify Backups</a>
                </div>
            </div>
            
            <div style="margin-top: 30px;">
                <h3>Quick Links</h3>
                <a href="/grafana/" class="btn">Monitoring Dashboard</a>
                <a href="/pgadmin/" class="btn">Database Admin</a>
                <a href="/api/dashboard" class="btn">Backup Dashboard</a>
            </div>
        </div>
        
        <script>
            // Simple status updates
            function updateStatus() {
                fetch('/api/status')
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('lastBackup').textContent = data.lastBackup || 'Unknown';
                        document.getElementById('repoSize').textContent = data.repoSize || 'Unknown';
                        document.getElementById('availableSpace').textContent = data.availableSpace || 'Unknown';
                        document.getElementById('lastDRTest').textContent = data.lastDRTest || 'Unknown';
                    })
                    .catch(error => {
                        console.log('Status update failed:', error);
                    });
            }
            
            // Update status every 30 seconds
            updateStatus();
            setInterval(updateStatus, 30000);
        </script>
    </body>
    </html>

---
# Service for Backup UI
apiVersion: v1
kind: Service
metadata:
  name: exapg-backup-ui
  namespace: exapg
  labels:
    app.kubernetes.io/name: exapg
    app.kubernetes.io/component: backup-ui
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app.kubernetes.io/name: exapg
    app.kubernetes.io/component: backup-ui
  type: ClusterIP 